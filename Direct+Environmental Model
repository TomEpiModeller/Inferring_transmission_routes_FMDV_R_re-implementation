##Libraries necessary to run model

library("EnvStats")
library("ismev")
library("evd")
library("mclust")
library("R.matlab")
library("MASS")
library("pracma")


##############source functions

source("M://Rstudio experiments//Transmission Model//function_script.R")

##Changeable parameters

Ntrials <- 10000 #number of simulations
Ndays <- 40 #number of days
dt <- 1/24 #time interval for calculating shedding levels



dataset=5 #parameter dataset - 0=priors, 1-5=posterior from farms 1-5, 6= no env. size, farm 1

if (dataset>0){
#Overall farm data:
Data_Infected <- c(38, 44, 36, 54, 14)
Data_Pop <- c(38, 49, 47, 54, 16)
Data_age <- c(10, 7, 5, 10, 5)

#Individual farm data
Data_clin <- list(c(1, 0, 13, 8, 10, 1, 3, 2, 0, 0),
                  c(1, 8, 7, 5, 8, 13, 2),
                  c(3, 2, 11, 17, 3),
                  c(5, 3, 12, 13, 19, 2, 0, 0, 0, 0),
                  c(2, 4, 4, 3, 1),
                  c(1, 0, 13, 8, 10, 1, 3, 2, 0, 0))

if (dataset < 6){
  N <- Data_Pop [dataset]
}else {
  N=38
}
}

#Uncomment the below to choose a different herd size
#N <- 50 #Number of animals

if (dataset == 6){
  Esize <- 1
} else {
  Esize <- N
}

betaD <- 1 #Probability of infection through interaction
betaE <- 1 #Probability of infection through the environment

#Load parameters

Trans_parameters <- Load_parameters(dataset)
Trans_parameters$ParTr[,1] <- Trans_parameters$ParTr[,1]*betaD
Trans_parameters$ParTr[,2] <- Trans_parameters$ParTr[,2]*betaE

#Initial conditions
Ni0 <- (Trans_parameters$Ni0prior) #Initial infected

#Uncomment the below to set different initial conditions for infected animals
#Ni0 <- 1*rep(1,20000)
E0 <- c(0,0,0,0)

if (dataset == 6){
  dataset <- 1
}

##Run model of transmission

k <- 1
samp_index<-vector("list", length=0)
V_profile_list<-vector("list",length=0)
transmission_k_store<-vector("list",length=0)
Inffit<-vector("list",length=0)

while (k <= Ntrials){
  V_profile_list[[k]] <- viral_profile(Trans_parameters$ParVp, N, Ndays, dt)
  samp_index[[k]]<-(V_profile_list[[k]]$samp)
  transmission_output <- Transmission_model(N=N, Ndays=Ndays, dt=dt, ParTr=Trans_parameters$ParTr, Ni0=Ni0[[V_profile_list[[k]]$samp]],
                                            E0=E0, VP=V_profile_list[[k]]$VP,Ti=V_profile_list$Ti, Esize=Esize)
  transmission_k_store[[k]]<-transmission_output
if (dataset>0 & transmission_k_store[[k]]$Cfirst<Ndays/dt-Data_age[[dataset]]/dt){
    Cs1 <- transmission_k_store[[k]]$Cs[seq(from=1/dt,to=Ndays/dt,by=1/dt)]
    if (transmission_k_store[[k]]$Cfirst>1/dt){
      Inffit[[k]] <- Cs1[ceiling(transmission_k_store[[k]]$Cfirst*dt-1):ceiling(transmission_k_store[[k]]$Cfirst*dt-1+Data_age[[dataset]])]
    }else{
      Inffit[[k]] <- c(0,transmission_k_store[[k]]$Cs1[seq(1:Data_age[[dataset]])])
    }
}
    if (max(transmission_k_store[[k]]$Ni)>N/2){
  k<-k+1
    }

}

# Plotting
library(ggplot2)

# Convert Inffit to a data_frame
df <- do.call(rbind,Inffit)

#Estimate the number of new clinical signs per day
df_mod<-df[,-1]-df[,-ncol(df)]
df_mod_plot<-df_mod[-1,]

# Create a data frame for plotting
plot_data <- data.frame(
  xp = (1:(ncol(df_mod_plot))),
  Data_clin_dataset = rev(Data_clin[[dataset]]),
  median = rev(apply(df_mod_plot, 2, median)),
  lower = rev(apply(df_mod_plot, 2, function(x) quantile(x, 0.05))),
  upper = rev(apply(df_mod_plot, 2, function(x) quantile(x, 0.95)))
)

# Plot using ggplot2
ggplot(plot_data, aes(x = xp)) +
  geom_bar(aes(y = Data_clin_dataset), stat = "identity", fill = "blue") +
  geom_errorbar(aes(ymin = lower, ymax = upper), color = "red", width = 0.2, position = position_dodge(0.9)) +
  geom_point(aes(y=median),color="red",size=1)+
  labs(x = "Lesion age (days)", y = "Number of cattle") +
  ylim(0, N) +
  theme_minimal() +
  theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14))


